// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorios;

namespace Repositorios.Migrations
{
    [DbContext(typeof(ViveroContext))]
    [Migration("20220618232150_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.EntidadesVivero.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrecioFinalCalculado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Compra");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Compra");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.Iluminacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipoIluminacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Iluminacion");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.Item", b =>
                {
                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int?>("PlantaId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CompraId", "PlantaId");

                    b.HasIndex("PlantaId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.ParametroSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TasaDescuentoAmericaSur")
                        .HasColumnType("int");

                    b.Property<int>("TasaIVA")
                        .HasColumnType("int");

                    b.Property<int>("TasaImportacionDGI")
                        .HasColumnType("int");

                    b.Property<int>("ValorMaximoDescripcionPL")
                        .HasColumnType("int");

                    b.Property<int>("ValorMaximoDescripcionTP")
                        .HasColumnType("int");

                    b.Property<int>("ValorMinimoDescripcionPL")
                        .HasColumnType("int");

                    b.Property<int>("ValorMinimoDescripcionTP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ParametroSistema");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlturaMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrecuenciaRiego")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NombresVulgares")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Temperatura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoAmbienteId")
                        .HasColumnType("int");

                    b.Property<int>("TipoIluminacionId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NombreCientifico")
                        .IsUnique();

                    b.HasIndex("TipoAmbienteId");

                    b.HasIndex("TipoIluminacionId");

                    b.HasIndex("TipoPlantaId");

                    b.ToTable("Planta");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.TipoAmbiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ambiente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoAmbiente");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.TipoPlanta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TipoPlanta");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.Importacion", b =>
                {
                    b.HasBaseType("Dominio.EntidadesVivero.Compra");

                    b.Property<string>("DescripcionSanitaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OrigenAmericaSur")
                        .HasColumnType("bit");

                    b.ToTable("Importacion");

                    b.HasDiscriminator().HasValue("Importacion");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.Plaza", b =>
                {
                    b.HasBaseType("Dominio.EntidadesVivero.Compra");

                    b.Property<decimal>("CostoFlete")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Plaza");

                    b.HasDiscriminator().HasValue("Plaza");
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.Item", b =>
                {
                    b.HasOne("Dominio.EntidadesVivero.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.EntidadesVivero.Planta", "Planta")
                        .WithMany("Items")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.EntidadesVivero.Planta", b =>
                {
                    b.HasOne("Dominio.EntidadesVivero.TipoAmbiente", "TipoAmbiente")
                        .WithMany()
                        .HasForeignKey("TipoAmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.EntidadesVivero.Iluminacion", "TipoIluminacion")
                        .WithMany()
                        .HasForeignKey("TipoIluminacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.EntidadesVivero.TipoPlanta", "TipoPlanta")
                        .WithMany()
                        .HasForeignKey("TipoPlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
